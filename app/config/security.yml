# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
#        in_memory:
#            memory:
#                users:
##                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
#         main:
#            entity: { class: AL\RealEstateBundle\Entity\User, property: username }
          fos_userbundle:
                      id: fos_user.user_provider.username

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        secure_area:
                    pattern: ^/secure_area

                    oauth:
                        failure_path: /secure_area/connect
                        login_path: /secure_area/connect
                        check_path: /secure_area/connect
                        provider: fos_userbundle
                        resource_owners:
                            github:     /secure_area/login/check-github
                        oauth_user_provider:
                            service: hwi_oauth.user.provider.fosub_bridge

                    anonymous:    true
                    logout:
                        path:           /secure_area/logout
                        target:         /secure_area/connect #where to go after logout

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
         - { path: ^/secure_area/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/secure_area/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
         - { path: ^/secure_area, roles: ROLE_USER }
#         - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
#         - { path: ^/admin/, role: ROLE_ADMIN }